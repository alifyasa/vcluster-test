basicDeploy:
  name: basic-deploy
  deploymentType1:
    name: deployment-type-1-x-basic-deploy
    containerPort: 8080
    replicaCount: 3
  serviceType1:
    name: svc-type-1-x-basic-deploy
    servicePort: 8081
    type: NodePort
  deploymentType2:
    name: deployment-type-2-x-basic-deploy
    containerPort: 8080
    replicaCount: 3
  serviceType2:
    name: svc-type-2-x-basic-deploy
    servicePort: 8082
    type: NodePort

kubevirt:
  name: kubevirt
  virtualMachine: 
    name: vm-x-kubevirt
  virtualMachineService:
    name: vm-service-x-kubevirt
    type: NodePort
  dataVolume:
    name: vm-dv-x-kubevirt
    storageClassName: nfs-standard
  dataVolumeExtra:
    name: vm-dv-extra-x-kubevirt
    storageClassName: nfs-standard
    pvc:
      name: vm-dv-extra-pvc-x-kubevirt
      #namespace: default

ingress:
  name: ingress   

jobs:
  monitorJob:
    name: job-x-monitor-job
    serviceAccount:
      name: service-account-x-monitor-job
      #namespace: default
    role:
      name: role-x-monitor-job
      #namespace: default
    roleBinding:
      name: role-binding-x-monitor-job
      #namespace: default
    script:
      argument: "svc kubernetes -p '.status.ready' -s true -t 10"
      resultConfigMapName: monitor-job-result-x-monitor-job
      arguments:
    scripts:
      - "deploy deployment-type-1-x-basic-deploy -p '.status.availableReplicas' -s 3"
      - "deploy deployment-type-2-x-basic-deploy -p '.status.availableReplicas' -s 3"

      - "vm vm-x-kubevirt -p '.status.printableStatus' -s Running"
      - "vmi vm-x-kubevirt -p '.status.phase' -s Running"
      
      - "dv vm-dv-x-kubevirt -p '.status.phase' -s Succeeded"
      - "dv vm-dv-extra-x-kubevirt -p '.status.phase' -s Succeeded"

      - "pvc vm-dv-x-kubevirt -p '.status.phase' -s Bound"
      - "pvc vm-dv-extra-x-kubevirt -p '.status.phase' -s Bound"
      - "pvc vm-dv-extra-pvc-x-kubevirt -p '.status.phase' -s Bound"

data:
  scriptsConfigMap:
    name: scripts-configmap
